# RVM Configs.

# Gem Options
#   These options are passed to the 'gem' command in a RVM environment.
#
#export rvm_gem_options="--no-rdoc --no-ri"

# Install On Use Flag
# Install rubies when used if are not installed.
#
export rvm_install_on_use_flag=1

# Gemset Create on use Flag
# This will create a gemset when the gemset is used if it does not exist
#
# export rvm_gemset_create_on_use_flag=1

# Make Flags, I have 8 cpu's so I might use 7 make threads:
#
#export rvm_make_flags="-j4"

# Source a .rvmrc file in a directory after changing to it, if it exists.
# To disable this fature, set in root/home .rvmrc file:
#
# export rvm_project_rvmrc=0
#
# Or don't even bother sourcing rvm, it *is* optional. Always has been, you can
# instead add $rvm_path/bin to your PATH and use --default to switch...

# Automatically trust project .rvmrc files
#
#  export rvm_trust_rvmrcs_flag=1

# Always trust an rvmrc, even if it's contents change.
# CAUTION: Can be dangerous / security risk. Only use this feature if you know
#          what you are doing / accept the implications :)
#
# export rvm_always_trust_rvmrc_flag

# Specify RBXOPT enviroment settings that should always be set when calling
# Rubinius scripts. For example, to always run the agent when running from
# an Rubinius environment, set the value to '-Xagent'
#
# export rvm_rbx_opt

# Disable grabbing rvm binaries
#
export rvm_disable_binary_flag=1

# Disable automatic system configuration of RVM via /etc/profile.d/rvm.sh:
#
# export rvm_etc_profile_flag=0

# Add configure flags for builds
#
# export rvm_configure_flags="--with-openssl-dir=$rvm_path/usr --with-readline-dir=$rvm_path/usr"

# install bundler, ruby and gems on cd.
#
export rvm_autoinstall_bundler_flag=1
