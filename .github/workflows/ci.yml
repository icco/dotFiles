name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run shellcheck on bin/ directory
        run: |
          # Check all files in bin/ directory (all are shell scripts)
          find bin/ -type f -exec shellcheck {} \;
      - name: Run shellcheck on oh-my-zsh custom directory
        run: |
          # Check .zsh files in custom directory
          find link/oh-my-zsh/custom -name "*.zsh" -type f -exec shellcheck -s bash {} \;

          # Check any shell scripts in hosts subdirectory
          if [ -d "link/oh-my-zsh/custom/hosts" ]; then
            find link/oh-my-zsh/custom/hosts -name "*.zsh" -type f -exec shellcheck -s bash {} \;
          fi
  go-test:
    name: Go Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"
      - name: Run go mod tidy
        run: go mod tidy
      - name: Run go vet
        run: go vet ./...
      - name: Run go test
        run: go test -v ./...
      - name: Run go test with race detector
        run: go test -race ./...
  yaml-format:
    name: YAML Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install yamllint
        run: pip install yamllint
      - name: Create yamllint config
        run: |
          cat > .yamllint.yml << 'EOF'
          extends: default

          rules:
            line-length:
              max: 120
            indentation:
              spaces: 2
            truthy:
              allowed-values: ['true', 'false', 'on', 'off']
          EOF
      - name: Run yamllint
        run: |
          # Find and lint YAML files, excluding vim bundles
          find . -name "*.yml" -o -name "*.yaml" | grep -v "link/vim/bundle" | while read -r file; do
            echo "Linting $file"
            yamllint "$file"
          done
      - name: Install yq
        uses: dcarbone/install-yq-action@v1.3.1
      - name: Format YAML files with yq
        run: |
          # Format all YAML files in place, excluding vim bundles
          find . -name "*.yml" -o -name "*.yaml" | grep -v "link/vim/bundle" | while read -r file; do
            echo "Formatting $file"
            yq -iP '.' "$file"
          done

          # Check if any files were modified
          if ! git diff --quiet; then
            echo "YAML files were reformatted. Please commit these changes:"
            git diff --name-only
            exit 1
          fi
  all-checks:
    name: All Checks Complete
    runs-on: ubuntu-latest
    needs:
      - shellcheck
      - go-test
      - yaml-format
    if: always()
    steps:
      - name: Check all jobs
        run: "if [[ \"${{ needs.shellcheck.result }}\" != \"success\" ]]; then\n  echo \"Shellcheck failed\"\n  exit 1\nfi\nif [[ \"${{ needs.go-test.result }}\" != \"success\" ]]; then\n  echo \"Go tests failed\"\n  exit 1\nfi\nif [[ \"${{ needs.yaml-format.result }}\" != \"success\" ]]; then\n  echo \"YAML formatting failed\"\n  exit 1\nfi\necho \"All checks passed!\" "
