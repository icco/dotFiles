#! /bin/zsh
# shellcheck shell=bash

# This script changes directory to the related infra directory if it exists.
# Rules:
#  - if not in a sub directory of ~/Work, exit with an error
#  - If current dir ends in -infra, cd to directory in parent directory without -infra in the name
#  - If current dir doesn't end in -infra, cd to the directory in the parent directory with -infra in the name
#  - If in the previous two rules the directory doesn't exist, check if there is a github repo in the pinginc organization with that name, clone it to the parent directory and cd into it.
#  - If no repo exists, exit with an error

# If this script is being executed directly (not sourced), source it instead
if [[ "${BASH_SOURCE[0]}" == "${0}" ]] && [[ -z "$ZSH_EVAL_CONTEXT" ]]; then
  # shellcheck disable=SC1090
  source "$0"
  exit 0
fi

# Check if we're in a subdirectory of ~/Work
if [[ ! $(pwd) =~ ^$HOME/Work ]]; then
  echo "Error: Must be in a subdirectory of ~/Work" >&2
  return 1
fi

current_dir=$(basename "$(pwd)")
parent_dir=$(dirname "$(pwd)")

if [[ $current_dir == *-infra ]]; then
  # Remove -infra suffix
  target_name=${current_dir%-infra}
  target_path="$parent_dir/$target_name"
else
  # Add -infra suffix
  target_name="${current_dir}-infra"
  target_path="$parent_dir/$target_name"
fi

if [[ -d $target_path ]]; then
  cd "$target_path" || return 1
  echo "Switched to: $target_path"
else
  # Try to clone from pinginc organization
  echo "Directory $target_path doesn't exist. Attempting to clone from pinginc/$target_name..."
  
  if gh repo view "pinginc/$target_name" >/dev/null 2>&1; then
    cd "$parent_dir" || return 1
    git clone "git@github.com:pinginc/$target_name.git"
    cd "$target_name" || return 1
    echo "Cloned and switched to: $target_path"
  else
    echo "Error: Repository pinginc/$target_name does not exist on GitHub" >&2
    return 1
  fi
fi 